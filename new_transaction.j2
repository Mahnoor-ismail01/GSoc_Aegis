```
import uvm_pkg::*;

class {{ dut_name }}_{{ ttype_name }}_packet extends uvm_sequence_item;
  `uvm_object_utils({{ dut_name }}_{{ ttype_name }}_packet)

{% for i in inputs %}
  {% if i.type.startswith('rand') %}
  {{ i.type }} [{{ i.width - 1 }}:0] {{ i.name }}; // Input{% if i.description %} ({{ i.description }}){% endif %}
  {% else %}
  {{ i.type }} [{{ i.width - 1 }}:0] {{ i.name }}; // Input{% if i.description %} ({{ i.description }}){% endif %}
  {% endif %}
  {% if i.constraints %}
  constraint {{ i.name }}_c { {% for c in i.constraints %}{{ c }}; {% endfor %} }
  {% endif %}
{% endfor %}

{% for o in outputs %}
  {% if o.type.startswith('rand') %}
  {{ o.type }} [{{ o.width - 1 }}:0] {{ o.name }}; // Output{% if o.description %} ({{ o.description }}){% endif %}
  {% else %}
  {{ o.type }} [{{ o.width - 1 }}:0] {{ o.name }}; // Output{% if o.description %} ({{ o.description }}){% endif %}
  {% endif %}
{% endfor %}

  function new(string name = "{{ dut_name }}_{{ ttype_name }}_packet");
    super.new(name);
  endfunction

  virtual function void do_copy(uvm_object rhs);
    {{ dut_name }}_{{ ttype_name }}_packet tmp;
    super.do_copy(rhs);
    if (!$cast(tmp, rhs)) `uvm_fatal("COPY", "Cast failed in do_copy")
    {% for i in signals %}
    this.{{ i.name }} = tmp.{{ i.name }};
    {% endfor %}
  endfunction

  virtual function string convert2string();
    string s = $sformatf("{% for i in signals %}{{ i.path }}=%0h{% if not loop.last %} {% endif %}{% endfor %}", {% for i in signals %}{{ i.name }}{% if not loop.last %}, {% endif %}{% endfor %});
    return s;
  endfunction
endclass
```